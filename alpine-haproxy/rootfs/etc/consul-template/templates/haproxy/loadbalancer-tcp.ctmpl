{{- $haproxy_maxconn := env "HAPROXY_MAXCONN" -}}
{{- $haproxy_maxspreadchecks := env "HAPROXY_MAXSPREADCHECKS" -}}
{{- $haproxy_spreadchecks := env "HAPROXY_SPREADCHECKS" -}}
{{- $haproxy_timeout_connect := env "HAPROXY_TIMEOUTCONNECT" -}}
{{- $haproxy_timeout_server := env "HAPROXY_TIMEOUTSERVER" -}}
{{- $haproxy_timeout_client := env "HAPROXY_TIMEOUTCLIENT" -}}
{{- $haproxy_timeout_queue := env "HAPROXY_TIMEOUTQUEUE" -}}
{{- $haproxy_timeout_tunnel := env "HAPROXY_TIMEOUTTUNNEL" -}}
{{- $haproxy_balance := env "HAPROXY_BALANCE" -}}
{{- $haproxy_retries := env "HAPROXY_RETRIES" -}}
{{- $haproxy_redispatch := env "HAPROXY_REDISPATCH" -}}
{{- $haproxy_clitcpka := env "HAPROXY_CLITCPKA" -}}
{{- $haproxy_stats := env "HAPROXY_STATS" -}}
{{- $haproxy_stats_username := env "HAPROXY_STATSUSERNAME" -}}
{{- $haproxy_stats_password := env "HAPROXY_STATSPASSWORD" -}}
{{- $haproxy_stats_port := env "HAPROXY_STATSPORT" -}}
{{- $haproxy_stats_uri := env "HAPROXY_STATSURI" -}}
{{- $haproxy_stats_realm := env "HAPROXY_STATSREALM" -}}
{{- $haproxy_stats_allow := env "HAPROXY_STATSALLOW" -}}
{{- $haproxy_ssl := env "HAPROXY_SSL" -}}
{{- $haproxy_ssl_certificate := env "HAPROXY_SSLCERTIFICATE" -}}
{{- $loadbalancer_keyprefix := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_KEYPREFIX" -}}
{{- $loadbalancer_listeners := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_LISTENERS" -}}
{{- $loadbalancer_ssl_listeners := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_SSLLISTENERS" -}}
{{- $haproxy_backend_check_inter := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_BACKENDCHECKINTER" -}}
{{- $haproxy_backend_check_fastinter := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_BACKENDCHECKFASTINTER" -}}
{{- $haproxy_backend_check_downinter := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_CHECKDOWNINTER" -}}
{{- $haproxy_backend_check_rise := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_BACKENDCHECKRISE" -}}
{{- $haproxy_backend_check_fall := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_BACKENDCHECKFALL" -}}
{{- $haproxy_backend_check_timeout := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_BACKENDCHECKTIMEOUT" -}}
{{- $haproxy_backend_tcpcheck := env "HAPROXY_TEMPLATE_LOADBALANCERTCP_BACKENDTCPCHECK" -}}
global
    maxconn {{if $haproxy_maxconn}}{{$haproxy_maxconn}}{{else}}1024{{end}}
    log 127.0.0.1 format rfc5424 local0 info
    tune.ssl.default-dh-param 2048
    ssl-default-bind-options no-sslv3 no-tls-tickets force-tlsv12
    ssl-default-bind-ciphers AES128+EECDH:AES128+EDH
    {{if $haproxy_maxspreadchecks}}max-spread-checks {{$haproxy_maxspreadchecks}}{{end}}
    spread-checks {{if $haproxy_spreadchecks}}{{$haproxy_spreadchecks}}{{else}}0{{end}}

defaults
    mode tcp
    option abortonclose
    timeout connect {{if $haproxy_timeout_connect}}{{$haproxy_timeout_connect}}{{else}}5s{{end}}
    timeout server {{if $haproxy_timeout_server}}{{$haproxy_timeout_server}}{{else}}10s{{end}}
    timeout client {{if $haproxy_timeout_client}}{{$haproxy_timeout_client}}{{else}}30s{{end}}
    timeout queue {{if $haproxy_timeout_queue}}{{$haproxy_timeout_queue}}{{else}}30s{{end}}
    timeout tunnel {{if $haproxy_timeout_tunnel}}{{$haproxy_timeout_tunnel}}{{else}}1h{{end}}
    balance {{if $haproxy_balance}}{{$haproxy_balance}}{{else}}roundrobin{{end}}
    retries {{if $haproxy_retries}}{{$haproxy_retries}}{{else}}3{{end}}
    {{if eq $haproxy_redispatch "1"}}option redispatch{{end}}
    {{if eq $haproxy_clitcpka "1"}}option clitcpka{{end}}
    log global
    option tcplog
    option dontlognull

{{if eq $haproxy_stats "1"}}
listen stats
    bind *:{{if $haproxy_stats_port}}{{$haproxy_stats_port}}{{else}}1936{{end}}
    bind :::{{if $haproxy_stats_port}}{{$haproxy_stats_port}}{{else}}1936{{end}}
    mode http
    stats enable
    stats uri {{if $haproxy_stats_uri}}{{$haproxy_stats_uri}}{{else}}/haproxy?stats{{end}}
    stats realm {{if $haproxy_stats_realm}}{{$haproxy_stats_realm}}{{else}}HAProxy statistics{{end}}
    {{if and $haproxy_stats_username $haproxy_stats_password}}
    stats auth {{print $haproxy_stats_username ":" $haproxy_stats_password}}
    {{end}}
    stats hide-version
    stats refresh 30s
    stats show-node
    acl access_allowed src {{if $haproxy_stats_allow}}{{$haproxy_stats_allow}}{{else}}127.0.0.1{{end}}
    http-request deny if !access_allowed
{{end}}

{{range $listener := $loadbalancer_listeners | split ","}}
frontend tcp-in-{{$listener}}
    bind *:{{$listener}}
    bind :::{{$listener}}
    default_backend tcp-out-{{$listener}}

backend tcp-out-{{$listener}}
    default-server inter {{if $haproxy_backend_check_inter}}{{$haproxy_backend_check_inter}}{{else}}2s{{end}}{{if $haproxy_backend_check_fastinter}} fastinter {{$haproxy_backend_check_fastinter}}{{end}}{{if $haproxy_backend_check_downinter}} downinter {{$haproxy_backend_check_downinter}}{{end}} rise {{if $haproxy_backend_check_rise}}{{$haproxy_backend_check_rise}}{{else}}2{{end}} fall {{if $haproxy_backend_check_fall}}{{$haproxy_backend_check_fall}}{{else}}3{{end}}
    {{if $haproxy_backend_check_timeout}}timeout check {{$haproxy_backend_check_timeout}}{{end}}
    {{if eq $haproxy_backend_tcpcheck "1"}}option tcp-check{{end}}
    {{range ls (print $loadbalancer_keyprefix "targets/" $listener)}}
    server {{.Key}} {{.Key}} check
    {{end}}
{{end}}

{{if eq $haproxy_ssl "1"}}
{{range $ssl_listener := $loadbalancer_ssl_listeners | split ","}}
frontend tcp-ssl-in-{{$ssl_listener}}
    bind *:{{$ssl_listener}} ssl crt {{$haproxy_ssl_certificate}} ciphers AES128+EECDH:AES128+EDH force-tlsv12 no-sslv3
    bind :::{{$ssl_listener}} ssl crt {{$haproxy_ssl_certificate}} ciphers AES128+EECDH:AES128+EDH force-tlsv12 no-sslv3
    default_backend tcp-ssl-out-{{$ssl_listener}}

backend tcp-ssl-out-{{$ssl_listener}}
    default-server inter {{if $haproxy_backend_check_inter}}{{$haproxy_backend_check_inter}}{{else}}2s{{end}}{{if $haproxy_backend_check_fastinter}} fastinter {{$haproxy_backend_check_fastinter}}{{end}}{{if $haproxy_backend_check_downinter}} downinter {{$haproxy_backend_check_downinter}}{{end}} rise {{if $haproxy_backend_check_rise}}{{$haproxy_backend_check_rise}}{{else}}2{{end}} fall {{if $haproxy_backend_check_fall}}{{$haproxy_backend_check_fall}}{{else}}3{{end}}
    {{if $haproxy_backend_check_timeout}}timeout check {{$haproxy_backend_check_timeout}}{{end}}
    {{if eq $haproxy_backend_tcpcheck "1"}}option tcp-check{{end}}
    {{range ls (print $loadbalancer_keyprefix "ssl_targets/" $ssl_listener)}}
    server {{.Key}} {{.Key}} check
    {{end}}
{{end}}
{{end}}
