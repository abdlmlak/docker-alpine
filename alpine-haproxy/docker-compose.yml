version: '2'

services:
    consul:
        image: bhuisgen/alpine-consul
        ports:
            - "8500:8500"
        volumes:
            - /etc/localtime:/etc/localtime:ro
        environment:
            - CONSUL_OPTIONS=-server -bootstrap-expect 1 -client 0.0.0.0 -ui    # minimal server options

    haproxy:
        depends_on:
            - consul
        image: bhuisgen/alpine-haproxy
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /etc/localtime:/etc/localtime:ro
        environment:
            - CONSUL_AGENT=consul                                       # consul agent hostname/IP
            #- CONSUL_PORT=8500                                         # consul agent port
            #- CONSUL_KEYPREFIX=path/prefix/                            # consul key prefix path
            - CONSUL_SERVICENAME=haproxy                                # consul service name
            - CONSUL_SERVICETAGS=dev                                    # consul service tag
            - CONSUL_SERVICEPORT=80                                     # consul service port
            - CONSUL_CHECKTYPE=tcp                                      # consul health check type
            #- HAPROXY_MAXCONN=1024                                     # maximum of connections allowed
            #- HAPROXY_MAXSPREADCHECKS=                                 # delay of first check at startup
            #- HAPROXY_SPREADCHECKS=0                                   # randomness on the interval delay between checks
            #- HAPROXY_TIMEOUTCONNECT=5s                                # connect timeout
            #- HAPROXY_TIMEOUTSERVER=10s                                # server timeout
            #- HAPROXY_TIMEOUTCLIENT=30s                                # client timeout
            #- HAPROXY_TIMEOUTQUEUE=30s                                 # request timeout in queue
            #- HAPROXY_TIMEOUTTUNNEL=1h                                 # tunnel timeout
            #- HAPROXY_TIMEOUTHTTPREQUEST=5s                            # HTTP request timeout (http mode only)
            #- HAPROXY_TIMEOUTHTTPKEEPALIVE=5s                          # HTTP keepalive request timeout (http mode only)
            #- HAPROXY_BALANCE=roundrobin                               # balance mode
            #- HAPROXY_RETRIES=3                                        # number of connection retries
            #- HAPROXY_REDISPATCH=0                                     # allow redispatch of cookie sticked connections
            #- HAPROXY_CLITCPKA=0                                       # send TCP keepalive packets to client
            #- HAPROXY_STATS=0                                          # enable statistics
            #- HAPROXY_STATSPORT=1936                                   # statistics port
            #- HAPROXY_STATSURI=/haproxy?stats                          # statistics URI
            #- HAPROXY_STATSREALM=Haproxy\ Statistics                   # statistics realm
            #- HAPROXY_STATSUSERNAME=                                   # auth user
            #- HAPROXY_STATSPASSWORD=                                   # auth password
            #- HAPROXY_STATSALLOW=127.0.0.1                             # IP allowed to access to stats
            #- HAPROXY_SSL=0                                            # enable SSL
            #- HAPROXY_SSLCERTIFICATE=/etc/haproxy/ssl/cert.pem         # SSL certificate file
            #- HAPROXY_SSLREDIRECT=0                                    # redirect HTTP to HTTPS
            #- HAPROXY_GZIP=0                                           # enable gzip compression (frontend)
            - HAPROXY_TEMPLATE=backend                                  # configuration template
            #
            # template backend
            #
            - HAPROXY_TEMPLATE_BACKEND_SERVICENAME=myservice                    # service name to proxify
            - HAPROXY_TEMPLATE_BACKEND_SERVICETAG=dev                           # service tag to proxify
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDCHECKINTER=2s                    # interval between checks
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDCHECKFASTINTER=                  # interval between checks only if server is up or unchecked (inter must be unset)
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDCHECKDOWNINTER=                  # interval between checks only if server is down (inter must be unset)
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDCHECKRISE=2                      # number of successfull checks to considerate servers up
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDCHECKFALL=3                      # number of failed checks to considerate server down
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDCHECKTIMEOUT=                    # check timeout (smallest value between timeout check and inter)
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDHTTPCHECK=0                      # enable HTTP check
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDHTTPCHECKOPTIONS=                # HTTP check options (<method> [<uri> [<version]])
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDHTTPCHECKDISABLEON404=0          # enable maintenance on error 404
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDHTTPCHECKEXPECT=                 # response validation ([!] <match> <pattern>)
            #- HAPROXY_TEMPLATE_BACKEND_BACKENDGZIP=0                           # enable gzip compression (backend)
            #
            # template loadbalancer-http
            #
            - HAPROXY_TEMPLATE_LOADBALANCERHTTP_KEYPREFIX=myloadbalancer/       # key prefix for dynamic configuration
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDCHECKINTER=2s           # interval between checks
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDCHECKFASTINTER=         # interval between checks only if server is up or unchecked (inter must be unset)
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDCHECKDOWNINTER=         # interval between checks only if server is down (inter must be unset)
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDCHECKRISE=2             # number of successfull checks to considerate servers up
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDCHECKFALL=3             # number of failed checks to considerate server down
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDCHECKTIMEOUT=           # check timeout (smallest value between timeout check and inter)
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDHTTPCHECK=0             # enable HTTP check
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDHTTPCHECKOPTIONS=       # HTTP check options (<method> [<uri> [<version]])
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDHTTPCHECKDISABLEON404=0 # enable maintenance on error 404
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDHTTPCHECKEXPECT=        # response validation ([!] <match> <pattern>)
            #- HAPROXY_TEMPLATE_LOADBALANCERHTTP_BACKENDGZIP=0                  # enable gzip compression (backend)
            #
            # template loadbalancer-tcp
            #
            - HAPROXY_TEMPLATE_LOADBALANCERTCP_LISTENERS=1234,4567              # listening ports
            - HAPROXY_TEMPLATE_LOADBALANCERTCP_SSLLISTENERS=8888,9999           # listening secured ports
            - HAPROXY_TEMPLATE_LOADBALANCERTCP_KEYPREFIX=myloadbalancer/        # key prefix for dynamic configuration
            #- HAPROXY_TEMPLATE_LOADBALANCERTCP_CHECKINTER=2s                   # interval between checks
            #- HAPROXY_TEMPLATE_LOADBALANCERTCP_CHECKFASTINTER=                 # interval between checks only if server is up or unchecked (inter must be unset)
            #- HAPROXY_TEMPLATE_LOADBALANCERTCP_CHECKDOWNINTER=                 # interval between checks only if server is down (inter must be unset)
            #- HAPROXY_TEMPLATE_LOADBALANCERTCP_CHECKRISE=2                     # number of successfull checks to considerate servers up
            #- HAPROXY_TEMPLATE_LOADBALANCERTCP_CHECKFALL=3                     # number of failed checks to considerate server down
            #- HAPROXY_TEMPLATE_LOADBALANCERTCP_CHECKTIMEOUT=                   # check timeout (smallest value between timeout check and inter)
            #- HAPROXY_TEMPLATE_LOADBALANCERTCP_TCPCHECK=0                      # enable TCP check
